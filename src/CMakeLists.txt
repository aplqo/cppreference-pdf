aux_source_directory(. src)
list(FILTER src EXCLUDE REGEX "main.cpp")

if(CMAKE_BUILD_TYPE EQUAL "Debug")
	aux_source_directory(../debug/ debug)
	add_definitions(-DDEBUG)
endif()

function(is_found lib lib_name)
	if(lib MATCHES "NOTFOUND")
		message(FATAL_ERROR "Can't find ${lib_name}")
	else()
		message(STATUS "Found ${lib_name} at ${lib}")
	endif()
endfunction()

find_library(gumbo gumbo)
is_found(${gumbo} "libgumbo")
find_library(gq gq)
is_found(${gq} "libgq")
find_library(wkhtmltopdf wkhtmltox)
is_found(${wkhtmltopdf} "wkhtmltox")

add_library(util STATIC ${src})
target_compile_features(util PUBLIC "cxx_std_17")
target_link_libraries(util ${gq})
target_link_libraries(util ${gumbo})
target_link_libraries(util ${wkhtmltopdf})

if(CMAKE_BUILD_TYPE EQUAL "Debug")
	add_executable(doc main.cpp ${debug})
else()
	add_executable(doc main.cpp)
endif()
target_link_libraries(doc util)
target_compile_features(doc PUBLIC "cxx_std_17")
